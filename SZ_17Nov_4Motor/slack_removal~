'''def slack_remove(sz, c):
		print "Removing slacks..."
		T1_slack=True
		T2_slack=True
		T3_slack=True
		unwind_time=0.3
		deflection_small=0.05
		deflection_large=0.10

		grav_comps = sz.get_sensor_readings() # read GRAVITY components 
		desired_comps = [0.0, 0.0, 9.8]
		#STEP_1 remove slacks
		if (grav_comps[1]<0): # leaning away from T1
			#Unwind T2 and T3 a bit
			c.at.T2.set_torque(-0.1) #T2
			sleep(unwind_time)
			c.at.T2.set_torque(0)
			c.at.T3.set_torque(-0.1) #T3
			sleep(unwind_time)
			c.at.T3.set_torque(0)
			#Wind T1 till deflection sensed => 				T1 slack removed.
			grav_sensed_init = sz.get_sensor_readings() #read GRAVITY components 
			pos_old = c.at.T1.get_pos()
			while(T1_slack):
				grav_sensed_curr = sz.get_sensor_readings() #read GRAVITY components 
				
				if(grav_sensed_curr[1]-grav_sensed_init[1] > deflection_large):
					T1_slack=False
					print "T1 Slack removed."
					break				
				c.at.T1.set_torque_mx(0.05) 
				pos_new = c.at.T1.get_pos()
				change = sz.measure_dtheta(pos_new, pos_old)
				print "Delta Theta is : %f"%change
				pos_old=pos_new
			c.at.T1.set_torque_mx(0) #stop
			
			if(grav_comps[0]<0): #leaning away from T2
				#unwind T3 a bit
				c.at.T3.set_torque(-0.1) #T3
				sleep(unwind_time)
				c.at.T3.set_torque(0)
				#wind T2 till deflection sensed =>				T2 slack removed
				pos_old = c.at.T2.get_pos()
				grav_sensed_init = sz.get_sensor_readings() #read GRAVITY components 
				while(T2_slack):
					grav_sensed_curr = sz.get_sensor_readings() #read GRAVITY components 
					if(abs(grav_sensed_curr[0]-grav_sensed_init[0]) > deflection_large):
						T2_slack=False
						print "T2 Slack removed."
						break				
					c.at.T2.set_torque(0.1)
					pos_new = c.at.T2.get_pos()
					change = sz.measure_dtheta(pos_new, pos_old)
					print "Delta Theta is : %f" % change
					pos_old = pos_new
				c.at.T2.set_torque(0) #stop
				#wind T3 till *small*deflection sensed =>		T3 slack removed
				pos_old = c.at.T3.get_pos()
				grav_sensed_init = sz.get_sensor_readings() #read GRAVITY components 
				while(T3_slack):
					grav_sensed_curr = sz.get_sensor_readings() #read GRAVITY components 
					if(abs(grav_sensed_curr[0]-grav_sensed_init[0]) > deflection_small):
						T3_slack=False
						print "T3 Slack removed."
						break				
					c.at.T3.set_torque(0.1)
					pos_new = c.at.T3.get_pos()
					change = sz.measure_dtheta(pos_new, pos_old)
					print "Delta Theta is : %f" % change
					pos_old = pos_new
				c.at.T3.set_torque(0) #stop
				
			elif(grav_comps[0]>0): #leaning away from T3
				#unwind T2 a bit
				c.at.T2.set_torque(-0.1) #T2
				sleep(unwind_time)
				c.at.T2.set_torque(0)
				
				# wind T3 till deflection sensed =>				T3 slack removed
				grav_sensed_init = sz.get_sensor_readings() #read GRAVITY components
				pos_old = c.at.T3.get_pos()
				while(T3_slack):
					grav_sensed_curr = sz.get_sensor_readings() #read GRAVITY components 
					if(abs(grav_sensed_curr[0]-grav_sensed_init[0]) > deflection_large):
						T3_slack=False
						print "T3 Slack removed."
						break				
					c.at.T3.set_torque(0.1)
					pos_new = c.at.T3.get_pos()
					change = sz.measure_dtheta(pos_new, pos_old)
					print "Delta Theta is : %f" % change
					pos_old = pos_new
				c.at.T3.set_torque(0) #stop
				# wind T2 till *small* deflection sensed =>		T2 slack removed
				grav_sensed_init = sz.get_sensor_readings() #read GRAVITY components
				pos_old = c.at.T2.get_pos()
				while(T2_slack):
					grav_sensed_curr = sz.get_sensor_readings() #read GRAVITY components 
					if(abs(grav_sensed_curr[0]-grav_sensed_init[0]) > deflection_small):
						T2_slack=False
						print "T2 Slack removed."
						break				
					c.at.T2.set_torque(0.1)
					pos_new = c.at.T2.get_pos()
					change = sz.measure_dtheta(pos_new, pos_old)
					print "Delta Theta is : %f" % change
					pos_old = pos_new
				c.at.T2.set_torque(0) #stop
				
		elif (grav_comps[1]>0): # leaning towards T1

			if(grav_comps[0]<0): #leaning away from T2
				#unwind T1 and T3 a bit
				c.at.T1.set_torque_mx(-0.05) #T1
				sleep(unwind_time)
				c.at.T1.set_torque_mx(0)
				c.at.T3.set_torque(-0.1) #T3
				sleep(unwind_time)
				c.at.T3.set_torque(0)
				
				#wind T2 till deflection sensed =>				T2 slack removed
				grav_sensed_init = sz.get_sensor_readings() #read GRAVITY components
				pos_old = c.at.T2.get_pos()
				while(T2_slack):
					grav_sensed_curr = sz.get_sensor_readings() #read GRAVITY components 
					if(abs(grav_sensed_curr[0]-grav_sensed_init[0]) > deflection_large):
						T2_slack=False
						print "T2 Slack removed."
						break				
					c.at.T2.set_torque(0.1)
					pos_new = c.at.T2.get_pos()
					change = sz.measure_dtheta(pos_new, pos_old)
					print "Delta Theta is : %f" % change
					pos_old = pos_new
				c.at.T2.set_torque(0) #stop
				
				
				#wind T3 till *small* deflection sensed => 		T3 slack removed
				grav_sensed_init = sz.get_sensor_readings() #read GRAVITY components
				pos_old = c.at.T3.get_pos()
				while(T3_slack):
					grav_sensed_curr = sz.get_sensor_readings() #read GRAVITY components 
					if(abs(grav_sensed_curr[0]-grav_sensed_init[0]) > deflection_small):
						T3_slack=False
						print "T3 Slack removed."
						break				
					c.at.T3.set_torque(0.1)
					pos_new = c.at.T3.get_pos()
					change = sz.measure_dtheta(pos_new, pos_old)
					print "Delta Theta is : %f" % change
					pos_old = pos_new
				c.at.T3.set_torque(0) #stop
				
			elif(grav_comps[0]>0): #leaning away from T3
				#unwind T1 and T2 a bit
				c.at.T1.set_torque_mx(-0.05) #T1
				sleep(unwind_time)
				c.at.T1.set_torque_mx(0)
				c.at.T2.set_torque(-0.1) #T2
				sleep(unwind_time)
				c.at.T2.set_torque(0)
				
				# wind T3 till deflection sensed =>				T3 slack removed
				grav_sensed_init = sz.get_sensor_readings() #read GRAVITY components
				pos_old = c.at.T3.get_pos()
				while(T3_slack):
					grav_sensed_curr = sz.get_sensor_readings() #read GRAVITY components 
					if(abs(grav_sensed_curr[0]-grav_sensed_init[0]) > deflection_large):
						T3_slack=False
						print "T3 Slack removed."
						break				
					c.at.T3.set_torque(0.1)
					pos_new = c.at.T3.get_pos()
					change = sz.measure_dtheta(pos_new, pos_old)
					print "Delta Theta is : %f" % change
					pos_old = pos_new
				c.at.T3.set_torque(0) #stop
				# wind T2 till *small* deflection sensed =>		T2 slack removed
				grav_sensed_init = sz.get_sensor_readings() #read GRAVITY components
				pos_old = c.at.T2.get_pos()
				while(T2_slack):
					grav_sensed_curr = sz.get_sensor_readings() #read GRAVITY components 
					if(abs(grav_sensed_curr[0]-grav_sensed_init[0]) > deflection_small):
						T2_slack=False
						print "T2 Slack removed."
						break				
					c.at.T2.set_torque(0.1)
					pos_new = c.at.T2.get_pos()
					change = sz.measure_dtheta(pos_new, pos_old)
					print "Delta Theta is : %f" % change
					pos_old = pos_new
				c.at.T2.set_torque(0) #stop
			
			#wind T1 till *small*deflection sensed =>		T1 slack removed
			grav_sensed_init = sz.get_sensor_readings() #read GRAVITY components
			pos_old = c.at.T1.get_pos()
			while(T1_slack):
				grav_sensed_curr = sz.get_sensor_readings() #read GRAVITY components 
				if(abs(grav_sensed_curr[1]-grav_sensed_init[1]) > deflection_small):
					T1_slack=False
					print "T1 Slack removed."
					break				
				c.at.T1.set_torque_mx(0.05)
				pos_new = c.at.T1.get_pos()
				change = sz.measure_dtheta(pos_new, pos_old)
				print "Delta Theta is : %f" % change
				pos_old = pos_new
			c.at.T1.set_torque_mx(0) #stop
		print "All slacks removed."

