This folder contains joystick control for one spiral zipper arm that uses 4 motors instead of 3. 
The main function is in SpiralZipper4Motor.py
The header functions are in spiral_zipper_4M.py

The code takes inputs from a LIDAR and IMU sensor to initialize the arms. It then updates the position of the arm based on accelerometer data from the IMU  and encoders on the motor.  The user inputs desired step inputs to the system.  The input is then compared against the current measured position to create a vector.  The vector is then scaled so that none of the arm's joint torques max out. This ensures smooth motion from one position to another, even if the desired step is large. This code is different than SpiralZipperJoy2 in that it uses an extra motor to control the third tether instead of passive spring. This leads to an overconstraint in the system. This overconstraint requires the system to be more precisely characterized then previous versions of the code in order to work correctly.
